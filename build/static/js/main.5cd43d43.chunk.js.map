{"version":3,"sources":["components/GlobalTimeView.js","components/Controls.js","components/SelectUser.js","components/LocalTimer.js","Tab.js","Tabs.js","components/LoginBtn.js","App.js","serviceWorker.js","index.js"],"names":["GlobalTimeView","react_default","a","createElement","this","props","time","Component","Controls","saveBtn","_this$props","isRunning","isSaved","start","restart","stop","save","onClick","className","SelectUser","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","preventDefault","onCreate","console","log","arr","i","push","key","concat","onSubmit","onChange","BuildOptions","type","s","formattedSeconds","sec","Math","floor","slice","LocalTimer","dataSubmit","onUpdate","user","carType","car","taskNum","localTime","globalTime","gtime","index","timer","setInterval","rs","Number","clearInterval","reset","_this2","taskDescription","toFixed","src_components_Controls","Tab","label","_this$props2","activeTab","Tabs","onClickTabItem","tab","handleUpdate","children","map","child","src_Tab","PropTypes","instanceOf","Array","isRequired","LoginBtn","handleAuthClick","window","gapi","auth2","getAuthInstance","signIn","taskCarA","idx","taskCarB","App","id","records","userNo","updateUser","data","updateCarType","updateData","values","body","client","sheets","spreadsheets","update","spreadsheetId","range","valueInputOption","resource","then","response","result","updatedCells","objectSpread","listMajors","get","length","row","toConsumableArray","React","createRef","components_LoginBtn","src_components_SelectUser","src_Tabs","components_GlobalTimeView","localtimer","src_components_LocalTimer","ref","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cd43d43.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass GlobalTimeView extends Component {\n  render() {\n    return <h1>{this.props.time}</h1>;\n  }\n}\n\nexport default GlobalTimeView;\n","import React, { Component } from \"react\";\nimport \"./Controls.css\";\nimport \"../Buttons.css\";\n\nclass Controls extends Component {\n  render() {\n    const { isRunning, isSaved, start, restart, stop, time, save } = this.props;\n\n    var saveBtn;\n    if (!isRunning && time === 0) {\n      saveBtn = (\n        <button className=\"LongBtn LocalBtn SaveBtn SaveBtnDisabled\">\n          Save\n        </button>\n      );\n    } else if (!isSaved && time !== 0) {\n      saveBtn = (\n        <button\n          onClick={save}\n          className=\"LongBtn LocalBtn SaveBtn SaveBtnDefault\"\n        >\n          Save\n        </button>\n      );\n    } else if (isSaved && time !== 0) {\n      saveBtn = (\n        <button\n          onClick={save}\n          className=\"LongBtn LocalBtn SaveBtn SaveBtnSaved\"\n        >\n          Saved!\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"Controls\">\n        {!isRunning && time === 0 ? (\n          <button onClick={start} className=\"LongBtn LocalBtn\">\n            Start\n          </button>\n        ) : null}\n        {!isRunning && time !== 0 ? (\n          <button onClick={restart} className=\"LongBtn LocalBtn\">\n            Resume\n          </button>\n        ) : null}\n        {isRunning ? (\n          <button onClick={stop} className=\"LongBtn LocalBtn Stop\">\n            Pause\n          </button>\n        ) : null}\n        {saveBtn}\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\nimport \"./SelectUser.css\";\n\nclass SelectUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"0\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onCreate(this.state.value);\n    console.log(this.state.value);\n  }\n  BuildOptions() {\n    var arr = [];\n    for (let i = 1; i <= 24; i++) {\n      arr.push(<option key={i} value={`User ${i}`}>{`User ${i}`}</option>);\n    }\n    return arr;\n  }\n\n  render() {\n    return (\n      <form className=\"UserSelectForm\" onSubmit={this.handleSubmit}>\n        <select\n          className=\"UserSelectBox LightGrayBg\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        >\n          <option value=\"No User Selected\">Select User</option>\n          <option value=\"Test\">Test</option>\n          {this.BuildOptions()}\n        </select>\n\n        <input className=\"SelectBoxSubmitBtn\" type=\"submit\" value=\"Apply\" />\n      </form>\n    );\n  }\n}\n\nexport default SelectUser;\n","import React, { Component } from \"react\";\nimport Controls from \"./Controls\";\nimport \"./LocalTimer.css\";\n\nlet s = 0;\n\nconst formattedSeconds = sec =>\n  (\"0\" + Math.floor(sec / 60)).slice(-2) + \":\" + (\"0\" + (sec % 60)).slice(-2);\n\nclass LocalTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      gtime: \"\",\n      isRunning: false,\n      isSaved: false\n    };\n  }\n\n  dataSubmit = () => {\n    this.props.onUpdate(\n      {\n        user: this.props.user,\n        carType: this.props.car,\n        taskNum: this.props.taskNum,\n        localTime: this.state.time,\n        globalTime: formattedSeconds(this.state.gtime)\n      },\n      this.props.index\n    );\n  };\n\n  start = () => {\n    console.log(\"Start Clicked\");\n    if (this.state.isRunning === false) {\n      this.setState({\n        gtime: this.props.time,\n        time: this.state.time,\n        isRunning: true\n      });\n      this.timer = setInterval(() => {\n        this.setState({ time: (s = s + 0.1) });\n      }, 100);\n    }\n  };\n\n  restart = () => {\n    let rs = Number(this.state.time);\n    this.setState({ time: this.state.time, isRunning: true, isSaved: false });\n    this.timer = setInterval(() => {\n      this.setState({ time: (rs = rs + 0.1) });\n    }, 100);\n  };\n\n  stop = () => {\n    if (this.state.isRunning === true) {\n      clearInterval(this.timer);\n      this.setState({ isRunning: false });\n      console.log(this.state.time);\n    }\n  };\n\n  save = () => {\n    this.setState({ isSaved: true });\n  };\n\n  reset = () => {\n    this.stop();\n    this.setState({ time: 0.0, isRunning: false, isSaved: false, gtime: \"\" });\n    s = 0.1;\n  };\n  render() {\n    return (\n      <div\n        className={\n          !this.state.isRunning && this.state.time !== 0 && this.state.isSaved\n            ? \"LocalTimerDone\"\n            : \"LocalTimer\"\n        }\n      >\n        <div className=\"LocalTimerHeader\">\n          <div className=\"LocalTimerTitle\">\n            <h2>Task {this.props.taskNum}</h2>\n            <p className=\"GlobalTimeAtLocal\">\n              {formattedSeconds(this.state.gtime)}\n            </p>\n          </div>\n          <button className=\"ResetBtnLocal\" onClick={this.reset} />\n        </div>\n        <div className=\"LocalTimerDescription\">\n          <p>{this.props.taskDescription}</p>\n        </div>\n        <h1>{Number(this.state.time).toFixed(1)}</h1>\n\n        <div className=\"LocalControl\">\n          <Controls\n            isRunning={this.state.isRunning}\n            isSaved={this.state.isSaved}\n            time={this.state.time}\n            restart={() => this.restart()}\n            start={() => {\n              this.reset();\n              this.start();\n            }}\n            stop={() => {\n              this.stop();\n            }}\n            save={() => {\n              this.stop();\n              this.save();\n              this.dataSubmit();\n            }}\n            reset={() => {\n              this.stop();\n              this.reset();\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LocalTimer;\n","import React, { Component } from \"react\";\n\nclass Tab extends Component {\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      props: { activeTab, label }\n    } = this;\n\n    let className = \"tab-list-item\";\n\n    if (activeTab === label) {\n      className += \" tab-list-active\";\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={() => {\n          this.onClick();\n        }}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Tab from \"./Tab\";\n\nclass Tabs extends Component {\n  static PropTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: this.props.children[0].props.label\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n    this.props.onUpdate(tab);\n  };\n\n  handleUpdate = () => {\n    this.props.onUpdate({});\n  };\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map(child => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from \"react\";\n\nclass LoginBtn extends Component {\n  render() {\n    return (\n      <div>\n        <button className=\"LoginBtn\" onClick={this.handleAuthClick}>Login</button>\n      </div>\n    );\n  }\n\n  /**\n   *  Sign in the user upon button click.\n   */\n  handleAuthClick = event => {\n    window.gapi.auth2.getAuthInstance().signIn();\n  };\n}\n\nexport default LoginBtn;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport GlobalTimeView from \"./components/GlobalTimeView\";\nimport Controls from \"./components/Controls\";\nimport SelectUser from \"./components/SelectUser\";\nimport LocalTimer from \"./components/LocalTimer\";\nimport Tabs from \"./Tabs\";\nimport LoginBtn from \"./components/LoginBtn\";\nimport \"./Tab.css\";\nimport \"./Buttons.css\";\nconst taskCarA = [\n  {\n    idx: 1,\n    taskNum: \"1-1\",\n    taskDescription:\n      \"홈화면 위젯 설정을 바꿔보세요. “공조” 대신에 다른 위젯 정보로 변경해 주세요.\"\n  },\n  {\n    idx: 2,\n    taskNum: \"1-2\",\n    taskDescription: \"가운데 위젯과 오른쪽 위젯의 위치를 바꿔주세요.\"\n  },\n  {\n    idx: 3,\n    taskNum: \"2\",\n    taskDescription: \"분할화면의 뷰를 “지도”로 바꿔 주세요.\"\n  },\n  {\n    idx: 4,\n    taskNum: \"3\",\n    taskDescription:\n      \"사용자 버튼을 누르면 “폰 프로젝션” 메뉴가 바로 켜지도록 설정해 주세요. \"\n  },\n  {\n    idx: 5,\n    taskNum: \"4-1\",\n    taskDescription:\n      \"계기판에 표시되는 정보들 중에 “기어 변속 알림”도 보이게 해 주세요.\"\n  },\n  {\n    idx: 6,\n    taskNum: \"4-2\",\n    taskDescription: \"운전석 시트의 온도가 자동으로 맞춰지도록 설정해 주세요.\"\n  },\n  {\n    idx: 7,\n    taskNum: \"4-3\",\n    taskDescription: \"충돌 경고로 레벨을 바꿔주세요.\"\n  },\n  {\n    idx: 8,\n    taskNum: \"5\",\n    taskDescription: \"제공된 폰을 블루투스로 연결해주세요.\"\n  },\n  {\n    idx: 9,\n    taskNum: \"6\",\n    taskDescription:\n      \"뒷좌석의 바람이 아래에서 나오도록 설정해 주시고, 온도는 “19도”로 맞춰주세요.\"\n  },\n  {\n    idx: 10,\n    taskNum: \"7\",\n    taskDescription: \"“차로 이탈 방지” 경고음을 줄여주세요.\"\n  },\n  {\n    idx: 11,\n    taskNum: \"8\",\n    taskDescription: \"“뒤에서 조작을 할 수 없도록 기능을 잠궈주세요.\"\n  }\n];\n\nconst taskCarB = [\n  {\n    idx: 12,\n    taskNum: \"1-1\",\n    taskDescription:\n      \"홈화면 위젯 설정을 바꿔보세요. “공조” 대신에 “운행 정보”로 변경해 주세요.\"\n  },\n  {\n    idx: 13,\n    taskNum: \"1-2\",\n    taskDescription: \"가운데 위젯과 오른쪽 위젯의 위치를 바꿔주세요.\"\n  },\n  {\n    idx: 14,\n    taskNum: \"2\",\n    taskDescription: \"분할화면의 뷰를 “지도”로 바꿔 주세요.\"\n  },\n  {\n    idx: 15,\n    taskNum: \"3\",\n    taskDescription:\n      \"사용자 버튼을 누르면 “폰 프로젝션” 메뉴가 바로 켜지도록 설정해 주세요. \"\n  },\n  {\n    idx: 16,\n    taskNum: \"4-1\",\n    taskDescription:\n      \"계기판에 표시되는 정보들 중에 “기어 변속 알림”도 보이게 해 주세요.\"\n  },\n  {\n    idx: 17,\n    taskNum: \"4-2\",\n    taskDescription: \"운전석 시트의 온도가 자동으로 맞춰지도록 설정해 주세요.\"\n  },\n  {\n    idx: 18,\n    taskNum: \"4-3\",\n    taskDescription: \"충돌 경고로 레벨을 바꿔주세요.\"\n  },\n  {\n    idx: 19,\n    taskNum: \"5\",\n    taskDescription: \"제공된 폰을 블루투스로 연결해주세요.\"\n  },\n  {\n    idx: 20,\n    taskNum: \"6\",\n    taskDescription:\n      \"뒷좌석의 바람이 아래에서 나오도록 설정해 주시고, 온도는 “19도”로 맞춰주세요.\"\n  },\n  {\n    idx: 21,\n    taskNum: \"7\",\n    taskDescription: \"“차로 이탈 방지” 경고음을 줄여주세요.\"\n  },\n  {\n    idx: 22,\n    taskNum: \"8\",\n    taskDescription: \"뒤에서 조작을 할 수 없도록 기능을 잠궈주세요.\"\n  }\n];\n\nconst formattedSeconds = sec =>\n  (\"0\" + Math.floor(sec / 60)).slice(-2) + \":\" + (\"0\" + (sec % 60)).slice(-2);\n\nlet s = 0;\nconst IS_USER_SELECTED = \"No User Selected\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n  }\n\n  id = 0;\n\n  state = {\n    time: 0,\n    isRunning: false,\n    records: [],\n    userNo: \"No User Selected\",\n    carType: \"KIA K900\"\n  };\n\n  updateUser = data => {\n    this.setState({\n      userNo: data\n    });\n    console.log(`parent after: ${this.state.userNo}`);\n  };\n\n  updateCarType = data => {\n    this.setState({\n      carType: data\n    });\n    console.log(`parent type: ${data}`);\n  };\n\n  updateData = (data, index) => {\n    var values = [\n      [\n        \"\" + data.user,\n        \"\" + data.carType,\n        \"\" + data.taskNum,\n        \"\" + data.localTime,\n        \"\" + data.globalTime\n      ]\n    ];\n    var body = {\n      values: values\n    };\n    console.log(values);\n    window.gapi.client.sheets.spreadsheets.values\n      .update({\n        spreadsheetId: \"1Xm5Hw8sOPM7RshP4aaG738mcdKIHG4AMbOyWBtgCd_0\",\n        // range: \"User One!A\" + index + \":D\" + index,\n        range: `${this.state.userNo}!A${index}:E${index}`,\n        valueInputOption: \"RAW\",\n        resource: body\n      })\n      .then(response => {\n        console.log(response);\n        var result = response.result;\n        console.log(`${result.updatedCells} cells updated.`);\n      });\n    this.setState({\n      records: this.state.records.concat({ ...data, id: this.id++ })\n    });\n    console.log(data);\n  };\n\n  start = () => {\n    console.log(\"Start Clicked\");\n    if (this.state.isRunning === false) {\n      this.setState({ time: this.state.time, isRunning: true });\n      this.timer = setInterval(() => {\n        this.setState({ time: s++ });\n      }, 1000);\n    }\n  };\n\n  stop = () => {\n    if (this.state.isRunning === true) {\n      clearInterval(this.timer);\n      this.setState({ isRunning: false });\n    }\n  };\n\n  save = () => {\n    console.log(this.state.time);\n  };\n\n  reset = () => {\n    this.stop();\n    this.setState({ time: 0, isRunning: false });\n    console.log(\"Global Reset\");\n    s = 0;\n  };\n\n  listMajors = () => {\n    window.gapi.client.sheets.spreadsheets.values\n      .get({\n        spreadsheetId: \"1Xm5Hw8sOPM7RshP4aaG738mcdKIHG4AMbOyWBtgCd_0\",\n        range: \"Class Data!A2:E\"\n      })\n      .then(\n        response => {\n          var range = response.result;\n          console.log(range);\n          let result = [];\n          if (range.values.length > 0) {\n            result = [\"Task, Lcoal, Global:\"];\n\n            for (let i = 0; i < range.values.length; i++) {\n              var row = range.values[i];\n              result = [...result, row[0] + \", \" + row[4]];\n            }\n          } else {\n            result = [...result, \"No data found.\"];\n          }\n          console.log(result);\n          this.setState({\n            records: result\n          });\n        },\n        response => {\n          // NOTHING\n        }\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"Header\">\n          <div className=\"HeaderTop\">\n            <h2>UT Timer</h2>\n            <LoginBtn />\n          </div>\n\n          <div className=\"TestMetaInfo\">\n            <div>\n              <p\n                className={\n                  this.state.userNo === IS_USER_SELECTED\n                    ? \"userInfoNotSelected\"\n                    : \"userInfoSelected\"\n                }\n              >\n                {this.state.userNo}{\" \"}\n              </p>\n              | {this.state.carType}\n            </div>\n          </div>\n          <div className=\"UserSelectSection\">\n            <SelectUser onCreate={this.updateUser} />\n          </div>\n        </header>\n\n        <Tabs onUpdate={this.updateCarType}>\n          <div label=\"KIA K900\">\n            <div className=\"GlobalTime\">\n              <div className=\"GlobalTimeView\">\n                <GlobalTimeView time={formattedSeconds(this.state.time)} />\n                <button className=\"ResetBtnGlobal\" onClick={this.reset} />\n              </div>\n\n              <div className=\"GlobalControl\">\n                {!this.state.isRunning && this.state.time === 0 ? (\n                  <button onClick={this.start} className=\"LongBtn\">\n                    Start\n                  </button>\n                ) : null}\n                {!this.state.isRunning && this.state.time !== 0 ? (\n                  <button onClick={this.start} className=\"LongBtn\">\n                    Resume\n                  </button>\n                ) : null}\n                {this.state.isRunning ? (\n                  <button onClick={this.stop} className=\"LongBtn Stop\">\n                    Pause\n                  </button>\n                ) : null}\n              </div>\n            </div>\n\n            <div>\n              {taskCarA.map(localtimer => (\n                <LocalTimer\n                  ref={this.child}\n                  user={this.state.userNo}\n                  car={this.state.carType}\n                  onUpdate={this.updateData}\n                  time={this.state.time}\n                  taskNum={localtimer.taskNum}\n                  taskDescription={localtimer.taskDescription}\n                  index={localtimer.idx}\n                  key={localtimer.idx}\n                />\n              ))}\n            </div>\n          </div>\n          <div label=\"BMW 7 Series\">\n            <div className=\"GlobalTime\">\n              <GlobalTimeView time={formattedSeconds(this.state.time)} />\n              <div className=\"GlobalControl\">\n                <Controls\n                  isRunning={this.state.isRunning}\n                  start={() => this.start()}\n                  stop={() => this.stop()}\n                  reset={() => this.reset()}\n                />\n              </div>\n            </div>\n\n            <div>\n              {taskCarB.map(localtimer => (\n                <LocalTimer\n                  ref={this.child}\n                  user={this.state.userNo}\n                  car={this.state.carType}\n                  onUpdate={this.updateData}\n                  time={this.state.time}\n                  taskNum={localtimer.taskNum}\n                  taskDescription={localtimer.taskDescription}\n                  index={localtimer.idx}\n                  key={localtimer.idx}\n                />\n              ))}\n            </div>\n          </div>\n        </Tabs>\n        {/* <button onClick={this.listMajors}>load</button> */}\n        {/* {JSON.stringify(this.state.records)} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}