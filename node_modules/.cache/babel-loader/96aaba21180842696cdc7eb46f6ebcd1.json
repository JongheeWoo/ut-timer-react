{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-react/src/components/Controls.js\";\nimport React, { Component } from \"react\";\n\nvar Controls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Controls, _Component);\n\n  function Controls() {\n    _classCallCheck(this, Controls);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Controls).apply(this, arguments));\n  }\n\n  _createClass(Controls, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isRunning = _this$props.isRunning,\n          start = _this$props.start,\n          restart = _this$props.restart,\n          stop = _this$props.stop,\n          reset = _this$props.reset,\n          time = _this$props.time;\n      return React.createElement(\"div\", {\n        className: \"Control_Btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: reset,\n        className: \"Conrols_Reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Reset\"), !isRunning && time === 0 ? React.createElement(\"button\", {\n        onClick: start,\n        className: \"Controls_Start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Start\") : null, !isRunning && time !== 0 ? React.createElement(\"button\", {\n        onClick: restart,\n        className: \"Controls_Start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Restart\") : null, isRunning ? React.createElement(\"button\", {\n        onClick: stop,\n        className: \"Controls_Stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Pause\") : null);\n    }\n  }]);\n\n  return Controls;\n}(Component);\n\nexport default Controls;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-react/src/components/Controls.js"],"names":["React","Component","Controls","props","isRunning","start","restart","stop","reset","time"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Q;;;;;;;;;;;;;6BACK;AAAA,wBACkD,KAAKC,KADvD;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,KADZ,eACYA,KADZ;AAAA,UACmBC,OADnB,eACmBA,OADnB;AAAA,UAC4BC,IAD5B,eAC4BA,IAD5B;AAAA,UACkCC,KADlC,eACkCA,KADlC;AAAA,UACyCC,IADzC,eACyCA,IADzC;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAED,KAAjB;AAAwB,QAAA,SAAS,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIG,CAACJ,SAAD,IAAcK,IAAI,KAAK,CAAvB,GACC;AAAQ,QAAA,OAAO,EAAEJ,KAAjB;AAAwB,QAAA,SAAS,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,GAIG,IARN,EASG,CAACD,SAAD,IAAcK,IAAI,KAAK,CAAvB,GACC;AAAQ,QAAA,OAAO,EAAEH,OAAjB;AAA0B,QAAA,SAAS,EAAC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,GAIG,IAbN,EAcGF,SAAS,GACR;AAAQ,QAAA,OAAO,EAAEG,IAAjB;AAAuB,QAAA,SAAS,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADQ,GAIN,IAlBN,CADF;AAsBD;;;;EAzBoBN,S;;AA4BvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Controls extends Component {\n  render() {\n    const { isRunning, start, restart, stop, reset, time } = this.props;\n    return (\n      <div className=\"Control_Btns\">\n        <button onClick={reset} className=\"Conrols_Reset\">\n          Reset\n        </button>\n        {!isRunning && time === 0 ? (\n          <button onClick={start} className=\"Controls_Start\">\n            Start\n          </button>\n        ) : null}\n        {!isRunning && time !== 0 ? (\n          <button onClick={restart} className=\"Controls_Start\">\n            Restart\n          </button>\n        ) : null}\n        {isRunning ? (\n          <button onClick={stop} className=\"Controls_Stop\">\n            Pause\n          </button>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n"]},"metadata":{},"sourceType":"module"}