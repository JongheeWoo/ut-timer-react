{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js\";\n// src/App.js\nimport React, { Component } from \"react\";\n\nvar TotalTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TotalTimer, _Component);\n\n  function TotalTimer() {\n    _classCallCheck(this, TotalTimer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TotalTimer).apply(this, arguments));\n  }\n\n  _createClass(TotalTimer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Stopwatch\"), React.createElement(Stopwatch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TotalTimer;\n}(Component);\n\nvar s = 0;\n\nvar Stopwatch =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Stopwatch, _Component2);\n\n  function Stopwatch(props) {\n    var _this;\n\n    _classCallCheck(this, Stopwatch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stopwatch).call(this, props));\n\n    _this.saveTime = function () {};\n\n    _this.handleClick = function () {\n      if (_this.state.isRunning === false) {\n        _this.setState({\n          time: _this.state.time,\n          isRunning: true\n        });\n\n        _this.timer = setInterval(function () {\n          _this.setState({\n            time: s++\n          });\n        }, 100);\n      } else {\n        clearInterval(_this.timer);\n        saveTime();\n\n        _this.setState({\n          isRunning: false\n        });\n      }\n    };\n\n    _this.state = {\n      time: 0,\n      isRunning: false\n    };\n    return _this;\n  }\n\n  _createClass(Stopwatch, [{\n    key: \"render\",\n    value: function render() {\n      var isRunning = this.state.isRunning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"TIME: \", this.state.time), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, isRunning ? \"Stop\" : \"Start\"), React.createElement(\"button\", {\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Stopwatch;\n}(Component);\n\nexport default TotalTimer;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js"],"names":["React","Component","TotalTimer","s","Stopwatch","props","saveTime","handleClick","state","isRunning","setState","time","timer","setInterval","clearInterval","handleReset"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EARsBD,S;;AAWzB,IAAIE,CAAC,GAAG,CAAR;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAQnBC,QARmB,GAQR,YAAM,CAAE,CARA;;AAAA,UASnBC,WATmB,GASL,YAAM;AAClB,UAAI,MAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA7B,EAAoC;AAClC,cAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE,MAAKH,KAAL,CAAWG,IAAnB;AAAyBF,UAAAA,SAAS,EAAE;AAApC,SAAd;;AACA,cAAKG,KAAL,GAAaC,WAAW,CAAC,YAAM;AAC7B,gBAAKH,QAAL,CAAc;AAAEC,YAAAA,IAAI,EAAER,CAAC;AAAT,WAAd;AACD,SAFuB,EAErB,GAFqB,CAAxB;AAGD,OALD,MAKO;AACLW,QAAAA,aAAa,CAAC,MAAKF,KAAN,CAAb;AACAN,QAAAA,QAAQ;;AACR,cAAKI,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KApBkB;;AAEjB,UAAKD,KAAL,GAAa;AACXG,MAAAA,IAAI,EAAE,CADK;AAEXF,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFiB;AAMlB;;;;6BAgBQ;AAAA,UACCA,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU,KAAKD,KAAL,CAAWG,IAArB,CADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,SAAS,GAAG,MAAH,GAAY,OADxB,CAFF,EAKE;AAAQ,QAAA,OAAO,EAAE,KAAKM,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF;AASD;;;;EAlCqBd,S;;AAoCxB,eAAeC,UAAf","sourcesContent":["// src/App.js\nimport React, { Component } from \"react\";\n\nclass TotalTimer extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <h1>Stopwatch</h1>\n        <Stopwatch />\n      </div>\n    );\n  }\n}\n\nlet s = 0;\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      isRunning: false\n    };\n  }\n\n  saveTime = () => {};\n  handleClick = () => {\n    if (this.state.isRunning === false) {\n      this.setState({ time: this.state.time, isRunning: true });\n      this.timer = setInterval(() => {\n        this.setState({ time: s++ });\n      }, 100);\n    } else {\n      clearInterval(this.timer);\n      saveTime();\n      this.setState({ isRunning: false });\n    }\n  };\n\n  render() {\n    const { isRunning } = this.state;\n    return (\n      <div>\n        <p>TIME: {this.state.time}</p>\n        <button onClick={this.handleClick}>\n          {isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\nexport default TotalTimer;\n"]},"metadata":{},"sourceType":"module"}