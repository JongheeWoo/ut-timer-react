{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js\";\n// src/App.js\nimport React, { Component } from \"react\";\n\nvar TotalTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TotalTimer, _Component);\n\n  function TotalTimer() {\n    _classCallCheck(this, TotalTimer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TotalTimer).apply(this, arguments));\n  }\n\n  _createClass(TotalTimer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Stopwatch\"), React.createElement(Stopwatch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TotalTimer;\n}(Component);\n\nvar m = 0;\n\nvar Stopwatch =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Stopwatch, _Component2);\n\n  function Stopwatch(props) {\n    var _this;\n\n    _classCallCheck(this, Stopwatch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stopwatch).call(this, props));\n\n    _this.handleClick = function () {\n      _this.setState({\n        time: _this.state.time\n      });\n\n      _this.timer = setInterval(function () {\n        _this.setState({\n          time: m++\n        });\n      }, 1000); // setInterval에 맞춰서 업데이트 시키고 싶음..\n    };\n\n    _this.state = {\n      time: 0\n    };\n    return _this;\n  } // handleClick = () => {};\n\n\n  _createClass(Stopwatch, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"TIME: \", this.state.time), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Start/Stop\"), React.createElement(\"button\", {\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Stopwatch;\n}(Component);\n\nexport default TotalTimer;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js"],"names":["React","Component","TotalTimer","m","Stopwatch","props","handleClick","setState","time","state","timer","setInterval","handleReset"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EARsBD,S;;AAWzB,IAAIE,CAAC,GAAG,CAAR;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UASnBC,WATmB,GASL,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWD;AAAnB,OAAd;;AACA,YAAKE,KAAL,GAAaC,WAAW,CAAC,YAAM;AAC7B,cAAKJ,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEL,CAAC;AAAT,SAAd;AACD,OAFuB,EAErB,IAFqB,CAAxB,CAFkB,CAMlB;AACD,KAhBkB;;AAEjB,UAAKM,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE;AADK,KAAb;AAFiB;AAKlB,G,CAED;;;;;6BAWS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU,KAAKC,KAAL,CAAWD,IAArB,CADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKF,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKM,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAOD;;;;EA3BqBX,S;;AA6BxB,eAAeC,UAAf","sourcesContent":["// src/App.js\nimport React, { Component } from \"react\";\n\nclass TotalTimer extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <h1>Stopwatch</h1>\n        <Stopwatch />\n      </div>\n    );\n  }\n}\n\nlet m = 0;\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0\n    };\n  }\n\n  // handleClick = () => {};\n\n  handleClick = () => {\n    this.setState({ time: this.state.time });\n    this.timer = setInterval(() => {\n      this.setState({ time: m++ });\n    }, 1000);\n\n    // setInterval에 맞춰서 업데이트 시키고 싶음..\n  };\n\n  render() {\n    return (\n      <div>\n        <p>TIME: {this.state.time}</p>\n        <button onClick={this.handleClick}>Start/Stop</button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\nexport default TotalTimer;\n"]},"metadata":{},"sourceType":"module"}