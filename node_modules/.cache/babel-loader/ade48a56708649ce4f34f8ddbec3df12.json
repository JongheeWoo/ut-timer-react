{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-react/src/components/LocalTimer.js\";\nimport React, { Component } from \"react\";\nimport Controls from \"./Controls\";\nvar s = 0;\n\nvar LocalTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocalTimer, _Component);\n\n  function LocalTimer(props) {\n    var _this;\n\n    _classCallCheck(this, LocalTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalTimer).call(this, props));\n\n    _this.start = function () {\n      console.log(\"Start Clicked\");\n      reset();\n\n      if (_this.state.isRunning === false) {\n        _this.setState({\n          time: _this.state.time,\n          isRunning: true\n        });\n\n        _this.timer = setInterval(function () {\n          _this.setState({\n            time: s++\n          });\n        }, 100);\n      }\n    };\n\n    _this.stop = function () {\n      if (_this.state.isRunning === true) {\n        clearInterval(_this.timer);\n\n        _this.setState({\n          isRunning: false\n        });\n\n        console.log(_this.state.time);\n      }\n    };\n\n    _this.save = function () {\n      _this.setState({\n        gtime: _this.props.time\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        time: 0,\n        isRunning: false\n      });\n\n      s = 0;\n    };\n\n    _this.state = {\n      time: 0,\n      gtime: 0,\n      isRunning: false\n    };\n    return _this;\n  }\n\n  _createClass(LocalTimer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"localHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Task \", this.props.taskNum), React.createElement(\"p\", {\n        className: \"GlobalTimeNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" \", this.state.gtime, \" \")), React.createElement(\"div\", {\n        className: \"localBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.taskDescription), React.createElement(\"h4\", {\n        className: \"LocalTimeNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.time, \" ms\")), React.createElement(\"div\", {\n        className: \"LocalControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Controls, {\n        isRunning: this.state.isRunning,\n        start: function start() {\n          _this2.start();\n\n          _this2.save();\n        },\n        stop: function stop() {\n          _this2.stop();\n        },\n        reset: function reset() {\n          return _this2.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LocalTimer;\n}(Component);\n\nexport default LocalTimer;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-react/src/components/LocalTimer.js"],"names":["React","Component","Controls","s","LocalTimer","props","start","console","log","reset","state","isRunning","setState","time","timer","setInterval","stop","clearInterval","save","gtime","taskNum","taskDescription"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Controls from \"./Controls\";\n\nlet s = 0;\nclass LocalTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      gtime: 0,\n      isRunning: false\n    };\n  }\n\n  start = () => {\n    console.log(\"Start Clicked\");\n    reset();\n    if (this.state.isRunning === false) {\n      this.setState({ time: this.state.time, isRunning: true });\n      this.timer = setInterval(() => {\n        this.setState({ time: s++ });\n      }, 100);\n    }\n  };\n\n  stop = () => {\n    if (this.state.isRunning === true) {\n      clearInterval(this.timer);\n      this.setState({ isRunning: false });\n      console.log(this.state.time);\n    }\n  };\n\n  save = () => {\n    this.setState({ gtime: this.props.time });\n  };\n\n  reset = () => {\n    this.setState({ time: 0, isRunning: false });\n    s = 0;\n  };\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"localHeader\">\n          <h3>Task {this.props.taskNum}</h3>\n          <p className=\"GlobalTimeNum\"> {this.state.gtime} </p>\n        </div>\n        <div className=\"localBody\">\n          <p>{this.props.taskDescription}</p>\n          <h4 className=\"LocalTimeNum\">{this.state.time} ms</h4>\n        </div>\n        <div className=\"LocalControl\">\n          <Controls\n            isRunning={this.state.isRunning}\n            start={() => {\n              this.start();\n              this.save();\n            }}\n            stop={() => {\n              this.stop();\n            }}\n            reset={() => this.reset()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LocalTimer;\n"]},"metadata":{},"sourceType":"module"}