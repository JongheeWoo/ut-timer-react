{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js\";\n// src/App.js\nimport React, { Component } from \"react\";\n\nvar TotalTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TotalTimer, _Component);\n\n  function TotalTimer() {\n    _classCallCheck(this, TotalTimer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TotalTimer).apply(this, arguments));\n  }\n\n  _createClass(TotalTimer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Stopwatch\"), React.createElement(Stopwatch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TotalTimer;\n}(Component); // src/App.js\n\n\nvar Stopwatch =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Stopwatch, _Component2);\n\n  function Stopwatch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stopwatch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stopwatch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isRunning: false\n    };\n\n    _this.handleClick = function () {\n      if (_this.state.isRunning === false) {\n        setInterval(run, 10);\n      }\n    };\n\n    _this.run = function () {\n      var ms = 0;\n      var s = 0;\n      var m = 0;\n      ms++;\n\n      if (ms == 100) {\n        ms = 0;\n        s++;\n      }\n\n      if (s == 60) {\n        s = 0;\n        m++;\n      }\n    };\n\n    _this.getTimer = function () {\n      return;\n      {\n        \"\".concat(m, \":\").concat(s < 10 ? \"0\" + s : s, \":\").concat(ms < 10 ? \"0\" + ms : ms);\n      }\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        runningTime: 0,\n        status: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Stopwatch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          status = _this$state.status,\n          runningTime = _this$state.runningTime;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, runningTime, \"ms\"), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, status ? \"Stop\" : \"Start\"), React.createElement(\"button\", {\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Stopwatch;\n}(Component);\n\nexport default TotalTimer;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js"],"names":["React","Component","TotalTimer","Stopwatch","state","isRunning","handleClick","setInterval","run","ms","s","m","getTimer","handleReset","setState","runningTime","status"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EARsBD,S,GAWzB;;;IACME,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAIRC,W,GAAc,YAAM;AAClB,UAAI,MAAKF,KAAL,CAAWC,SAAX,KAAyB,KAA7B,EAAoC;AAClCE,QAAAA,WAAW,CAACC,GAAD,EAAM,EAAN,CAAX;AACD;AACF,K;;UAEDA,G,GAAM,YAAM;AACV,UAAIC,EAAE,GAAG,CAAT;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AAEAF,MAAAA,EAAE;;AACF,UAAIA,EAAE,IAAI,GAAV,EAAe;AACbA,QAAAA,EAAE,GAAG,CAAL;AACAC,QAAAA,CAAC;AACF;;AACD,UAAIA,CAAC,IAAI,EAAT,EAAa;AACXA,QAAAA,CAAC,GAAG,CAAJ;AACAC,QAAAA,CAAC;AACF;AACF,K;;UAEDC,Q,GAAW,YAAM;AACf;AACA;AACE,kBAAGD,CAAH,cAAQD,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA3B,cAAgCD,EAAE,GAAG,EAAL,GAAU,MAAMA,EAAhB,GAAqBA,EAArD;AACD;AACF,K;;UAEDI,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,CAAf;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,wBACyB,KAAKZ,KAD9B;AAAA,UACCY,MADD,eACCA,MADD;AAAA,UACSD,WADT,eACSA,WADT;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,WAAJ,OADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKT,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCU,MAAM,GAAG,MAAH,GAAY,OAAtD,CAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAOD;;;;EA/CqBZ,S;;AAiDxB,eAAeC,UAAf","sourcesContent":["// src/App.js\nimport React, { Component } from \"react\";\n\nclass TotalTimer extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <h1>Stopwatch</h1>\n        <Stopwatch />\n      </div>\n    );\n  }\n}\n\n// src/App.js\nclass Stopwatch extends Component {\n  state = {\n    isRunning: false\n  };\n\n  handleClick = () => {\n    if (this.state.isRunning === false) {\n      setInterval(run, 10);\n    }\n  };\n\n  run = () => {\n    let ms = 0;\n    let s = 0;\n    let m = 0;\n\n    ms++;\n    if (ms == 100) {\n      ms = 0;\n      s++;\n    }\n    if (s == 60) {\n      s = 0;\n      m++;\n    }\n  };\n\n  getTimer = () => {\n    return;\n    {\n      `${m}:${s < 10 ? \"0\" + s : s}:${ms < 10 ? \"0\" + ms : ms}`;\n    }\n  };\n\n  handleReset = () => {\n    this.setState({ runningTime: 0, status: false });\n  };\n\n  render() {\n    const { status, runningTime } = this.state;\n    return (\n      <div>\n        <p>{runningTime}ms</p>\n        <button onClick={this.handleClick}>{status ? \"Stop\" : \"Start\"}</button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\nexport default TotalTimer;\n"]},"metadata":{},"sourceType":"module"}