{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-react/src/components/LocalTimer.js\";\nimport React, { Component } from \"react\";\nimport Controls from \"./Controls\";\nvar s = 0;\n\nvar formattedSeconds = function formattedSeconds(sec) {\n  return (\"0\" + Math.floor(sec / 60)).slice(-2) + \":\" + (\"0\" + sec % 60).slice(-2);\n};\n\nvar LocalTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocalTimer, _Component);\n\n  function LocalTimer(props) {\n    var _this;\n\n    _classCallCheck(this, LocalTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalTimer).call(this, props));\n\n    _this.dataSubmit = function () {\n      _this.props.onUpdate({\n        user: _this.props.user,\n        carType: _this.props.car,\n        taskNum: _this.props.taskNum,\n        localTime: _this.state.time,\n        globalTime: formattedSeconds(_this.state.gtime)\n      }, _this.props.index);\n    };\n\n    _this.start = function () {\n      console.log(\"Start Clicked\");\n\n      if (_this.state.isRunning === false) {\n        _this.setState({\n          time: _this.state.time,\n          isRunning: true\n        });\n\n        _this.timer = setInterval(function () {\n          _this.setState({\n            time: (s = s + 0.1).toFixed(1)\n          });\n        }, 100);\n      }\n    };\n\n    _this.stop = function () {\n      if (_this.state.isRunning === true) {\n        clearInterval(_this.timer);\n\n        _this.setState({\n          isRunning: false\n        });\n\n        console.log(_this.state.time);\n      }\n    };\n\n    _this.save = function () {\n      _this.setState({\n        gtime: _this.props.time\n      });\n    };\n\n    _this.lreset = function () {\n      _this.setState({\n        time: 0,\n        isRunning: false,\n        gtime: \"\"\n      });\n\n      s = 0.1;\n    };\n\n    _this.state = {\n      time: 0,\n      gtime: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LocalTimer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"LocalTimer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"localHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Task \", this.props.taskNum), React.createElement(\"p\", {\n        className: \"GlobalTimeNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Started at: \", formattedSeconds(this.state.gtime))), React.createElement(\"div\", {\n        className: \"localBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.props.taskDescription), this.state.isRunning ? React.createElement(\"h4\", {\n        className: \"LocalRunning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.time) : React.createElement(\"h4\", {\n        className: \"LocalStop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.time)), React.createElement(\"div\", {\n        className: \"LocalControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Controls, {\n        isRunning: this.state.isRunning,\n        start: function start() {\n          _this2.reset();\n\n          _this2.start();\n\n          _this2.save();\n        },\n        stop: function stop() {\n          _this2.stop();\n\n          _this2.dataSubmit();\n        },\n        reset: function reset() {\n          return _this2.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LocalTimer;\n}(Component);\n\nexport default LocalTimer;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-react/src/components/LocalTimer.js"],"names":["React","Component","Controls","s","formattedSeconds","sec","Math","floor","slice","LocalTimer","props","dataSubmit","onUpdate","user","carType","car","taskNum","localTime","state","time","globalTime","gtime","index","start","console","log","isRunning","setState","timer","setInterval","toFixed","stop","clearInterval","save","lreset","taskDescription","reset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Controls from \"./Controls\";\n\nlet s = 0;\n\nconst formattedSeconds = sec =>\n  (\"0\" + Math.floor(sec / 60)).slice(-2) + \":\" + (\"0\" + (sec % 60)).slice(-2);\n\nclass LocalTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      gtime: \"\"\n    };\n  }\n\n  dataSubmit = () => {\n    this.props.onUpdate(\n      {\n        user: this.props.user,\n        carType: this.props.car,\n        taskNum: this.props.taskNum,\n        localTime: this.state.time,\n        globalTime: formattedSeconds(this.state.gtime)\n      },\n      this.props.index\n    );\n  };\n\n  start = () => {\n    console.log(\"Start Clicked\");\n    if (this.state.isRunning === false) {\n      this.setState({ time: this.state.time, isRunning: true });\n      this.timer = setInterval(() => {\n        this.setState({ time: (s = s + 0.1).toFixed(1) });\n      }, 100);\n    }\n  };\n\n  stop = () => {\n    if (this.state.isRunning === true) {\n      clearInterval(this.timer);\n      this.setState({ isRunning: false });\n      console.log(this.state.time);\n    }\n  };\n\n  save = () => {\n    this.setState({ gtime: this.props.time });\n  };\n\n  lreset = () => {\n    this.setState({ time: 0, isRunning: false, gtime: \"\" });\n    s = 0.1;\n  };\n\n  render() {\n    return (\n      <div className=\"LocalTimer\">\n        <div className=\"localHeader\">\n          <h3>Task {this.props.taskNum}</h3>\n\n          <p className=\"GlobalTimeNum\">\n            Started at: {formattedSeconds(this.state.gtime)}\n          </p>\n        </div>\n        <div className=\"localBody\">\n          <p>{this.props.taskDescription}</p>\n\n          {this.state.isRunning ? (\n            <h4 className=\"LocalRunning\">{this.state.time}</h4>\n          ) : (\n            <h4 className=\"LocalStop\">{this.state.time}</h4>\n          )}\n        </div>\n        <div className=\"LocalControl\">\n          <Controls\n            isRunning={this.state.isRunning}\n            start={() => {\n              this.reset();\n              this.start();\n              this.save();\n            }}\n            stop={() => {\n              this.stop();\n              this.dataSubmit();\n            }}\n            reset={() => this.reset()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LocalTimer;\n"]},"metadata":{},"sourceType":"module"}