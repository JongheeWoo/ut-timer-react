{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-react/src/components/LocalTimer.js\";\nimport React, { Component } from \"react\";\nimport Controls from \"./Controls\";\nvar s = 0;\n\nvar LocalTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocalTimer, _Component);\n\n  function LocalTimer(props) {\n    var _this;\n\n    _classCallCheck(this, LocalTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalTimer).call(this, props));\n\n    _this.dataSubmit = function () {\n      _this.props.onUpdate({\n        localTime: _this.state.time,\n        globalTime: _this.state.gtime\n      });\n    };\n\n    _this.start = function () {\n      console.log(\"Start Clicked\");\n\n      if (_this.state.isRunning === false) {\n        _this.setState({\n          time: _this.state.time,\n          isRunning: true\n        });\n\n        _this.timer = setInterval(function () {\n          _this.setState({\n            time: s++\n          });\n        }, 100);\n      }\n    };\n\n    _this.stop = function () {\n      if (_this.state.isRunning === true) {\n        clearInterval(_this.timer);\n\n        _this.setState({\n          isRunning: false\n        });\n\n        console.log(_this.state.time);\n      }\n    };\n\n    _this.save = function () {\n      _this.setState({\n        gtime: _this.props.time\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        time: 0,\n        isRunning: false,\n        gtime: \"\"\n      });\n\n      s = 0;\n    };\n\n    _this.state = {\n      time: 0,\n      gtime: \"\",\n      isRunning: false\n    };\n    return _this;\n  }\n\n  _createClass(LocalTimer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"LocalTimer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"localHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Task \", this.props.taskNum), React.createElement(\"p\", {\n        className: \"GlobalTimeNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" \", this.state.gtime, \" \")), React.createElement(\"div\", {\n        className: \"localBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.taskDescription), this.state.isRunning ? React.createElement(\"h4\", {\n        className: \"LocalRunning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.time) : React.createElement(\"h4\", {\n        className: \"LocalStop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.time)), React.createElement(\"div\", {\n        className: \"LocalControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Controls, {\n        isRunning: this.state.isRunning,\n        start: function start() {\n          _this2.reset();\n\n          _this2.start();\n\n          _this2.save();\n        },\n        stop: function stop() {\n          _this2.stop();\n\n          _this2.dataSubmit();\n        },\n        reset: function reset() {\n          return _this2.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LocalTimer;\n}(Component);\n\nexport default LocalTimer;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-react/src/components/LocalTimer.js"],"names":["React","Component","Controls","s","LocalTimer","props","dataSubmit","onUpdate","localTime","state","time","globalTime","gtime","start","console","log","isRunning","setState","timer","setInterval","stop","clearInterval","save","reset","taskNum","taskDescription"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Controls from \"./Controls\";\n\nlet s = 0;\nclass LocalTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      gtime: \"\",\n      isRunning: false\n    };\n  }\n\n  dataSubmit = () => {\n    this.props.onUpdate({\n      localTime: this.state.time,\n      globalTime: this.state.gtime\n    });\n  };\n\n  start = () => {\n    console.log(\"Start Clicked\");\n    if (this.state.isRunning === false) {\n      this.setState({ time: this.state.time, isRunning: true });\n      this.timer = setInterval(() => {\n        this.setState({ time: s++ });\n      }, 100);\n    }\n  };\n\n  stop = () => {\n    if (this.state.isRunning === true) {\n      clearInterval(this.timer);\n      this.setState({ isRunning: false });\n      console.log(this.state.time);\n    }\n  };\n\n  save = () => {\n    this.setState({ gtime: this.props.time });\n  };\n\n  reset = () => {\n    this.setState({ time: 0, isRunning: false, gtime: \"\" });\n    s = 0;\n  };\n\n  render() {\n    return (\n      <div className=\"LocalTimer\">\n        <div className=\"localHeader\">\n          <h3>Task {this.props.taskNum}</h3>\n\n          <p className=\"GlobalTimeNum\"> {this.state.gtime} </p>\n        </div>\n        <div className=\"localBody\">\n          <p>{this.props.taskDescription}</p>\n\n          {this.state.isRunning ? (\n            <h4 className=\"LocalRunning\">{this.state.time}</h4>\n          ) : (\n            <h4 className=\"LocalStop\">{this.state.time}</h4>\n          )}\n        </div>\n        <div className=\"LocalControl\">\n          <Controls\n            isRunning={this.state.isRunning}\n            start={() => {\n              this.reset();\n              this.start();\n              this.save();\n            }}\n            stop={() => {\n              this.stop();\n              this.dataSubmit();\n            }}\n            reset={() => this.reset()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LocalTimer;\n"]},"metadata":{},"sourceType":"module"}