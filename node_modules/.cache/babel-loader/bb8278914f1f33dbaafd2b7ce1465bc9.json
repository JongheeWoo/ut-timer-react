{"ast":null,"code":"import _classCallCheck from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jonghee/ut-timer-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport Controls from \"./Controls\";\n\nvar TotalTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TotalTimer, _Component);\n\n  function TotalTimer() {\n    _classCallCheck(this, TotalTimer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TotalTimer).apply(this, arguments));\n  }\n\n  _createClass(TotalTimer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"Total time left\"), React.createElement(Stopwatch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TotalTimer;\n}(Component); // 여기서 컴포넌트 분리\n\n\nvar s = 0;\n\nvar Stopwatch =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Stopwatch, _Component2);\n\n  function Stopwatch(props) {\n    var _this;\n\n    _classCallCheck(this, Stopwatch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stopwatch).call(this, props));\n\n    _this.start = function () {\n      if (_this.state.isRunning === false) {\n        _this.setState({\n          time: _this.state.time,\n          isRunning: true\n        });\n\n        _this.timer = setInterval(function () {\n          _this.setState({\n            time: s++\n          });\n        }, 100);\n      }\n    };\n\n    _this.stop = function () {\n      if (_this.state.isRunning === true) {\n        clearInterval(_this.timer);\n\n        _this.setState({\n          isRunning: false\n        });\n      }\n    };\n\n    _this.save = function () {\n      console.log(_this.state.time);\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        time: 0,\n        isRunning: false\n      });\n\n      s = 0;\n    };\n\n    _this.state = {\n      time: 0,\n      isRunning: false\n    };\n    return _this;\n  }\n\n  _createClass(Stopwatch, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isRunning = this.state.isRunning;\n      var totalTime = this.props.totalTime;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Total Time: \", this.state.time, \" ms\"), React.createElement(Controls, {\n        isRunning: isRunning,\n        start: function start() {\n          return _this2.start();\n        },\n        stop: function stop() {\n          _this2.stop();\n\n          _this2.save();\n        },\n        reset: function reset() {\n          return _this2.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Stopwatch;\n}(Component);\n\nexport default TotalTimer;","map":{"version":3,"sources":["/Users/Jonghee/ut-timer-3/src/components/TotalTimer.js"],"names":["React","Component","Controls","TotalTimer","s","Stopwatch","props","start","state","isRunning","setState","time","timer","setInterval","stop","clearInterval","save","console","log","reset","totalTime"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EARsBF,S,GAWzB;;;AACA,IAAIG,CAAC,GAAG,CAAR;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAQnBC,KARmB,GAQX,YAAM;AACZ,UAAI,MAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA7B,EAAoC;AAClC,cAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE,MAAKH,KAAL,CAAWG,IAAnB;AAAyBF,UAAAA,SAAS,EAAE;AAApC,SAAd;;AACA,cAAKG,KAAL,GAAaC,WAAW,CAAC,YAAM;AAC7B,gBAAKH,QAAL,CAAc;AAAEC,YAAAA,IAAI,EAAEP,CAAC;AAAT,WAAd;AACD,SAFuB,EAErB,GAFqB,CAAxB;AAGD;AACF,KAfkB;;AAAA,UAiBnBU,IAjBmB,GAiBZ,YAAM;AACX,UAAI,MAAKN,KAAL,CAAWC,SAAX,KAAyB,IAA7B,EAAmC;AACjCM,QAAAA,aAAa,CAAC,MAAKH,KAAN,CAAb;;AACA,cAAKF,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KAtBkB;;AAAA,UAuBnBO,IAvBmB,GAuBZ,YAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKV,KAAL,CAAWG,IAAvB;AACD,KAzBkB;;AAAA,UA2BnBQ,KA3BmB,GA2BX,YAAM;AACZ,YAAKT,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWF,QAAAA,SAAS,EAAE;AAAtB,OAAd;;AACAL,MAAAA,CAAC,GAAG,CAAJ;AACD,KA9BkB;;AAEjB,UAAKI,KAAL,GAAa;AACXG,MAAAA,IAAI,EAAE,CADK;AAEXF,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFiB;AAMlB;;;;6BA0BQ;AAAA;;AAAA,UACCA,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAAA,UAECW,SAFD,GAEe,KAAKd,KAFpB,CAECc,SAFD;AAIP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB,KAAKZ,KAAL,CAAWG,IAA3B,QADF,EAEE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAEF,SADb;AAEE,QAAA,KAAK,EAAE;AAAA,iBAAM,MAAI,CAACF,KAAL,EAAN;AAAA,SAFT;AAGE,QAAA,IAAI,EAAE,gBAAM;AACV,UAAA,MAAI,CAACO,IAAL;;AACA,UAAA,MAAI,CAACE,IAAL;AACD,SANH;AAOE,QAAA,KAAK,EAAE;AAAA,iBAAM,MAAI,CAACG,KAAL,EAAN;AAAA,SAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAcD;;;;EAnDqBlB,S;;AAqDxB,eAAeE,UAAf","sourcesContent":["// src/App.js\nimport React, { Component } from \"react\";\nimport Controls from \"./Controls\";\n\nclass TotalTimer extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <h1>Total time left</h1>\n        <Stopwatch />\n      </div>\n    );\n  }\n}\n\n// 여기서 컴포넌트 분리\nlet s = 0;\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      isRunning: false\n    };\n  }\n\n  start = () => {\n    if (this.state.isRunning === false) {\n      this.setState({ time: this.state.time, isRunning: true });\n      this.timer = setInterval(() => {\n        this.setState({ time: s++ });\n      }, 100);\n    }\n  };\n\n  stop = () => {\n    if (this.state.isRunning === true) {\n      clearInterval(this.timer);\n      this.setState({ isRunning: false });\n    }\n  };\n  save = () => {\n    console.log(this.state.time);\n  };\n\n  reset = () => {\n    this.setState({ time: 0, isRunning: false });\n    s = 0;\n  };\n\n  render() {\n    const { isRunning } = this.state;\n    const { totalTime } = this.props;\n\n    return (\n      <div>\n        <p>Total Time: {this.state.time} ms</p>\n        <Controls\n          isRunning={isRunning}\n          start={() => this.start()}\n          stop={() => {\n            this.stop();\n            this.save();\n          }}\n          reset={() => this.reset()}\n        />\n      </div>\n    );\n  }\n}\nexport default TotalTimer;\n"]},"metadata":{},"sourceType":"module"}